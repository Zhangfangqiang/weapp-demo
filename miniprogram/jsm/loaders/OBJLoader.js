export default function(e){let{BufferGeometry:q,FileLoader:n,Float32BufferAttribute:K,Group:Q,LineBasicMaterial:W,LineSegments:X,Loader:t,Material:Y,Mesh:Z,MeshPhongMaterial:$,NoColors:ee,Points:te,PointsMaterial:re,VertexColors:ie}=e;var se=/^[og]\s*(.+)?/;var ae=/^mtllib /;var ne=/^usemtl /;function oe(){var e={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materialLibraries:[],startObject:function(e,t){if(this.object&&this.object.fromDeclaration===false){this.object.name=e;this.object.fromDeclaration=t!==false;return}var r=this.object&&typeof this.object.currentMaterial==="function"?this.object.currentMaterial():undefined;if(this.object&&typeof this.object._finalize==="function"){this.object._finalize(true)}this.object={name:e||"",fromDeclaration:t!==false,geometry:{vertices:[],normals:[],colors:[],uvs:[]},materials:[],smooth:true,startMaterial:function(e,t){var r=this._finalize(false);if(r&&(r.inherited||r.groupCount<=0)){this.materials.splice(r.index,1)}var i={index:this.materials.length,name:e||"",mtllib:Array.isArray(t)&&t.length>0?t[t.length-1]:"",smooth:r!==undefined?r.smooth:this.smooth,groupStart:r!==undefined?r.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:false,clone:function(e){var t={index:typeof e==="number"?e:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:false};t.clone=this.clone.bind(t);return t}};this.materials.push(i);return i},currentMaterial:function(){if(this.materials.length>0){return this.materials[this.materials.length-1]}return undefined},_finalize:function(e){var t=this.currentMaterial();if(t&&t.groupEnd===-1){t.groupEnd=this.geometry.vertices.length/3;t.groupCount=t.groupEnd-t.groupStart;t.inherited=false}if(e&&this.materials.length>1){for(var r=this.materials.length-1;r>=0;r--){if(this.materials[r].groupCount<=0){this.materials.splice(r,1)}}}if(e&&this.materials.length===0){this.materials.push({name:"",smooth:this.smooth})}return t}};if(r&&r.name&&typeof r.clone==="function"){var i=r.clone(0);i.inherited=true;this.object.materials.push(i)}this.objects.push(this.object)},finalize:function(){if(this.object&&typeof this.object._finalize==="function"){this.object._finalize(true)}},parseVertexIndex:function(e,t){var r=parseInt(e,10);return(r>=0?r-1:r+t/3)*3},parseNormalIndex:function(e,t){var r=parseInt(e,10);return(r>=0?r-1:r+t/3)*3},parseUVIndex:function(e,t){var r=parseInt(e,10);return(r>=0?r-1:r+t/2)*2},addVertex:function(e,t,r){var i=this.vertices;var s=this.object.geometry.vertices;s.push(i[e+0],i[e+1],i[e+2]);s.push(i[t+0],i[t+1],i[t+2]);s.push(i[r+0],i[r+1],i[r+2])},addVertexPoint:function(e){var t=this.vertices;var r=this.object.geometry.vertices;r.push(t[e+0],t[e+1],t[e+2])},addVertexLine:function(e){var t=this.vertices;var r=this.object.geometry.vertices;r.push(t[e+0],t[e+1],t[e+2])},addNormal:function(e,t,r){var i=this.normals;var s=this.object.geometry.normals;s.push(i[e+0],i[e+1],i[e+2]);s.push(i[t+0],i[t+1],i[t+2]);s.push(i[r+0],i[r+1],i[r+2])},addColor:function(e,t,r){var i=this.colors;var s=this.object.geometry.colors;s.push(i[e+0],i[e+1],i[e+2]);s.push(i[t+0],i[t+1],i[t+2]);s.push(i[r+0],i[r+1],i[r+2])},addUV:function(e,t,r){var i=this.uvs;var s=this.object.geometry.uvs;s.push(i[e+0],i[e+1]);s.push(i[t+0],i[t+1]);s.push(i[r+0],i[r+1])},addUVLine:function(e){var t=this.uvs;var r=this.object.geometry.uvs;r.push(t[e+0],t[e+1])},addFace:function(e,t,r,i,s,a,n,o,l){var h=this.vertices.length;var u=this.parseVertexIndex(e,h);var c=this.parseVertexIndex(t,h);var f=this.parseVertexIndex(r,h);this.addVertex(u,c,f);if(this.colors.length>0){this.addColor(u,c,f)}if(i!==undefined&&i!==""){var p=this.uvs.length;u=this.parseUVIndex(i,p);c=this.parseUVIndex(s,p);f=this.parseUVIndex(a,p);this.addUV(u,c,f)}if(n!==undefined&&n!==""){var v=this.normals.length;u=this.parseNormalIndex(n,v);c=n===o?u:this.parseNormalIndex(o,v);f=n===l?u:this.parseNormalIndex(l,v);this.addNormal(u,c,f)}},addPointGeometry:function(e){this.object.geometry.type="Points";var t=this.vertices.length;for(var r=0,i=e.length;r<i;r++){this.addVertexPoint(this.parseVertexIndex(e[r],t))}},addLineGeometry:function(e,t){this.object.geometry.type="Line";var r=this.vertices.length;var i=this.uvs.length;for(var s=0,a=e.length;s<a;s++){this.addVertexLine(this.parseVertexIndex(e[s],r))}for(var n=0,a=t.length;n<a;n++){this.addUVLine(this.parseUVIndex(t[n],i))}}};e.startObject("",false);return e}function r(e){t.call(this,e);this.materials=null}r.prototype=Object.assign(Object.create(t.prototype),{constructor:r,load:function(e,t,r,i){var s=this;var a=new n(s.manager);a.setPath(this.path);a.load(e,function(e){t(s.parse(e))},r,i)},setMaterials:function(e){this.materials=e;return this},parse:function(e){console.time("OBJLoader");var t=new oe;if(e.indexOf("\r\n")!==-1){e=e.replace(/\r\n/g,"\n")}if(e.indexOf("\\\n")!==-1){e=e.replace(/\\\n/g,"")}var r=e.split("\n");var i="",s="";var a=0;var n=[];var o=typeof"".trimLeft==="function";for(var l=0,h=r.length;l<h;l++){i=r[l];i=o?i.trimLeft():i.trim();a=i.length;if(a===0)continue;s=i.charAt(0);if(s==="#")continue;if(s==="v"){var u=i.split(/\s+/);switch(u[0]){case"v":t.vertices.push(parseFloat(u[1]),parseFloat(u[2]),parseFloat(u[3]));if(u.length>=7){t.colors.push(parseFloat(u[4]),parseFloat(u[5]),parseFloat(u[6]))}break;case"vn":t.normals.push(parseFloat(u[1]),parseFloat(u[2]),parseFloat(u[3]));break;case"vt":t.uvs.push(parseFloat(u[1]),parseFloat(u[2]));break}}else if(s==="f"){var c=i.substr(1).trim();var f=c.split(/\s+/);var p=[];for(var v=0,m=f.length;v<m;v++){var d=f[v];if(d.length>0){var g=d.split("/");p.push(g)}}var b=p[0];for(var v=1,m=p.length-1;v<m;v++){var j=p[v];var x=p[v+1];t.addFace(b[0],j[0],x[0],b[1],j[1],x[1],b[2],j[2],x[2])}}else if(s==="l"){var y=i.substring(1).trim().split(" ");var w=[],L=[];if(i.indexOf("/")===-1){w=y}else{for(var V=0,I=y.length;V<I;V++){var F=y[V].split("/");if(F[0]!=="")w.push(F[0]);if(F[1]!=="")L.push(F[1])}}t.addLineGeometry(w,L)}else if(s==="p"){var c=i.substr(1).trim();var M=c.split(" ");t.addPointGeometry(M)}else if((n=se.exec(i))!==null){var z=(" "+n[0].substr(1).trim()).substr(1);t.startObject(z)}else if(ne.test(i)){t.object.startMaterial(i.substring(7).trim(),t.materialLibraries)}else if(ae.test(i)){t.materialLibraries.push(i.substring(7).trim())}else if(s==="s"){n=i.split(" ");if(n.length>1){var C=n[1].trim().toLowerCase();t.object.smooth=C!=="0"&&C!=="off"}else{t.object.smooth=true}var O=t.object.currentMaterial();if(O)O.smooth=t.object.smooth}else{if(i==="\0")continue;throw new Error('THREE.OBJLoader: Unexpected line: "'+i+'"')}}t.finalize();var A=new Q;A.materialLibraries=[].concat(t.materialLibraries);for(var l=0,h=t.objects.length;l<h;l++){var E=t.objects[l];var P=E.geometry;var U=E.materials;var N=P.type==="Line";var G=P.type==="Points";var B=false;if(P.vertices.length===0)continue;var S=new q;S.setAttribute("position",new K(P.vertices,3));if(P.normals.length>0){S.setAttribute("normal",new K(P.normals,3))}else{S.computeVertexNormals()}if(P.colors.length>0){B=true;S.setAttribute("color",new K(P.colors,3))}if(P.uvs.length>0){S.setAttribute("uv",new K(P.uvs,2))}var _=[];for(var k=0,D=U.length;k<D;k++){var J=U[k];var O=undefined;if(this.materials!==null){O=this.materials.create(J.name);if(N&&O&&!(O instanceof W)){var H=new W;Y.prototype.copy.call(H,O);H.color.copy(O.color);O=H}else if(G&&O&&!(O instanceof re)){var R=new re({size:10,sizeAttenuation:false});Y.prototype.copy.call(R,O);R.color.copy(O.color);R.map=O.map;O=R}}if(!O){if(N){O=new W}else if(G){O=new re({size:1,sizeAttenuation:false})}else{O=new $}O.name=J.name}O.flatShading=J.smooth?false:true;O.vertexColors=B?ie:ee;_.push(O)}var T;if(_.length>1){for(var k=0,D=U.length;k<D;k++){var J=U[k];S.addGroup(J.groupStart,J.groupCount,k)}if(N){T=new X(S,_)}else if(G){T=new te(S,_)}else{T=new Z(S,_)}}else{if(N){T=new X(S,_[0])}else if(G){T=new te(S,_[0])}else{T=new Z(S,_[0])}}T.name=E.name;A.add(T)}console.timeEnd("OBJLoader");return A}});return r}